{
	"info": {
		"_postman_id": "60bbca83-7ea7-490d-8629-507f350d02d6",
		"name": "HW_1.5",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resp = cheerio.load(pm.response.text());\r",
							"console.log(resp);\r",
							"\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"This is the first responce from server!\");\r",
							"});\r",
							" pm.test(\"Body matches string\", function () {\r",
							"     pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");\r",
							" });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}first",
					"host": [
						"{{url}}first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resp = pm.response.json();\r",
							"let req = request.data;\r",
							"\r",
							"pm.test(\"check data1\", function () {\r",
							"    pm.expect(resp.name).to.eql(request.data.name);\r",
							"    pm.expect(resp.age).to.eql(request.data.age);\r",
							"    pm.expect(resp.salary).to.eql(+request.data.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"check dat2\", function () {\r",
							"    pm.expect(resp.name).to.eql(req.name);\r",
							"    pm.expect(resp.age).to.eql(req.age);\r",
							"    pm.expect(resp.salary).to.eql(+req.salary);\r",
							"});\r",
							"\r",
							"let family = resp.family\r",
							"console.log('family', family)\r",
							"\r",
							"pm.test(\"check u_salary_1_5_year\", function () {\r",
							"    pm.expect(resp.family.u_salary_1_5_year).to.eql(req.salary * 4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}user_info_3",
					"host": [
						"{{url}}user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resp = pm.response.json();\r",
							"let req = request.data;\r",
							"\r",
							"pm.test(\"Check data\", function () {\r",
							"    pm.expect(pm.response.name).to.eql(req.name);\r",
							"    pm.expect(pm.response.age).to.eql(req.age);\r",
							"    pm.expect(pm.response.salary).to.eql(req.salary);\r",
							"});\r",
							"\r",
							"let family = resp.family\r",
							"console.log('family', family)\r",
							"\r",
							"pm.test(\"check data2\", function () {\r",
							"    pm.expect(resp.family.pets.dog).to.have.property('name');\r",
							"    pm.expect(resp.family.pets.dog).to.have.property('age');\r",
							"    pm.expect(resp.family.pets.dog.name).to.eql ('Luky');\r",
							"    pm.expect(resp.family.pets.dog.age).to.eql (4);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name={{name}}&age={{age}}&salary={{salary}}",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "{{name}}"
						},
						{
							"key": "age",
							"value": "{{age}}"
						},
						{
							"key": "salary",
							"value": "{{salary}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resp = pm.response.json();\r",
							"let req = pm.request.url.query.toObject()\r",
							"console.log('req', req)\r",
							"\r",
							"pm.test(\"check data\", function () {\r",
							"    pm.expect(resp.name).to.eql(req.name);\r",
							"    pm.expect(resp.age).to.eql(+req.age);\r",
							"});\r",
							"\r",
							"console.log(\"========\", resp.name)\r",
							"console.log(\"========\", req.name)\r",
							"\r",
							"let req_salary = req.salary;\r",
							"let resp_salary = resp.salary;\r",
							"\r",
							"console.log('req_salary', req_salary);\r",
							"console.log('resp_salary', resp_salary);\r",
							"console.log('salary [0]', resp.salary[0]);\r",
							"console.log('salary [1]', resp.salary[1]);\r",
							"console.log('salary [2]', resp.salary[2]);\r",
							"\r",
							"let salary0 = resp.salary[0];\r",
							"let salary1 = resp.salary[1];\r",
							"let salary2 = resp.salary[2];\r",
							"\r",
							"pm.test(\"check data_salary\", function () {\r",
							"    pm.expect(salary0).to.eql(+req_salary);\r",
							"    pm.expect(+salary1).to.eql(+req_salary*2);\r",
							"    pm.expect(+salary2).to.eql(+req_salary*3);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"name\", resp.name);\r",
							"pm.environment.set(\"age\", resp.age);\r",
							"pm.environment.set(\"salary\", resp.salary[0]);\r",
							"\r",
							"for (let i in resp.salary) {\r",
							"    console.log(resp.salary[i])\r",
							"}\r",
							"console.log(resp.salary)"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Dima&age=23&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Dima"
						},
						{
							"key": "age",
							"value": "23"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resp = pm.response.json();\r",
							"let req = request.data;\r",
							"console.log(req)\r",
							"\r",
							"pm.test(\"response_ok\", function () {\r",
							" pm.expect(resp).to.have.property('start_qa_salary');\r",
							" pm.expect(resp).to.have.property('qa_salary_after_6_months');\r",
							" pm.expect(resp).to.have.property('qa_salary_after_12_months');\r",
							" pm.expect(resp).to.have.property('qa_salary_after_1.5_year');\r",
							" pm.expect(resp).to.have.property('qa_salary_after_3.5_years');\r",
							" pm.expect(resp).to.have.property('person');\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary\", function () {\r",
							"    pm.expect(resp.start_qa_salary).to.eql(+req.salary);\r",
							"    pm.expect(resp.qa_salary_after_6_months).to.eql(req.salary * 2);\r",
							"    pm.expect(resp.qa_salary_after_12_months).to.eql(req.salary * 2.7);\r",
							"    pm.expect(resp['qa_salary_after_1.5_year']).to.eql(req.salary * 3.3);\r",
							"    pm.expect(resp['qa_salary_after_3.5_years']).to.eql(req.salary * 3.8);\r",
							"});\r",
							"\r",
							"let person = resp.person\r",
							"console.log('person', person)\r",
							"pm.test(\"Check\", function () {\r",
							"    pm.expect(person.u_name[1]).to.eql(+req.salary);\r",
							"    pm.expect(person.u_age).to.eql(+req.age);\r",
							"    pm.expect(person.u_salary_5_years).to.eql(+req.salary * 4.2)\r",
							"});\r",
							"\r",
							"for (let i in resp.person) {\r",
							"    console.log(resp.person[i])\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}user_info_2",
					"host": [
						"{{url}}user_info_2"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Status code is 200\", function () {",
					"    pm.response.to.have.status(200);",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "name",
			"value": "Dima"
		},
		{
			"key": "age",
			"value": "23"
		},
		{
			"key": "salary",
			"value": "1000"
		}
	]
}